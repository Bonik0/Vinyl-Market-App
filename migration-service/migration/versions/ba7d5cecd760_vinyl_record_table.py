"""vinyl_record_table

Revision ID: ba7d5cecd760
Revises: 2e44e148ad25
Create Date: 2024-12-15 18:33:31.341235

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from migration.TableInit import TableInit, timetype

# revision identifiers, used by Alembic.
revision: str = 'ba7d5cecd760'
down_revision: Union[str, None] = '2e44e148ad25'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute(
        """
        CREATE TABLE vinyl_records (
            id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            seller_id INTEGER NOT NULL,
            quantity SMALLINT NOT NULL,
            title VARCHAR(255) NOT NULL UNIQUE,
            image_url VARCHAR(255),
            release_date DATE NOT NULL,
            UPC BIGINT NOT NULL,
            price FLOAT NOT NULL,
            FOREIGN KEY (seller_id) REFERENCES sellers (user_id) ON DELETE CASCADE
        );  
        """
    )
    vinyl_records_columns_types = {
            'id' : int, 
            'quantity' : int,
            'release_date' : timetype,
            'title' : str,
            'UPC' : int,
            'image_url' : str,
            'price' : float,
            'artist' : str
            
        }
    sellers_list = TableInit.parse_data('migration/versions/csv_data/seller_vinyl_record.csv', {'vinyl_record_id' : int, 'seller_id' : int})
    sellers = {seller['vinyl_record_id'] : seller['seller_id'] for seller in sellers_list}
    
    vinyl_records = TableInit.parse_data('migration/versions/csv_data/vinyl_record_without_genres.csv', vinyl_records_columns_types, ignore_rows = [7])
    for vinyl in vinyl_records:
        op.execute(
            sa.text("INSERT INTO vinyl_records (quantity, seller_id, release_date, title, UPC, image_url, price) VALUES (:quantity, :seller_id, :release_date, :title, :UPC, :image_url, :price)").params(vinyl | {'seller_id' : sellers[vinyl['id']]})
        )


def downgrade() -> None:
    op.execute(
        """
        DROP TABLE vinyl_records;
        """
    )
